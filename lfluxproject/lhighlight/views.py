from django.shortcuts import render_to_response, get_object_or_404
from django.template import RequestContext
import reversion
from datetime import datetime, timedelta, date
from reversion.models import Version

import pdb
import markdown

# from http://dwiel.net/blog/python-parsing-the-output-of-datetime-isoformat/
def _parse_iso_datetime(s) :
    # parse a datetime generated by datetime.isoformat()
    try :
        return datetime.strptime(s, "%Y-%m-%dT%H:%M:%S")
    except ValueError :
        return datetime.strptime(s, "%Y-%m-%dT%H:%M:%S.%f")

def serve_highlighted_text(request, slug, model, field_to_diff, sessionvar, template='lhighlight/highlight.html'):
    obj = get_object_or_404(model, slug=slug)

    if not hasattr(obj, field_to_diff):
        raise Exception("the selected object does not have a %s field" % field_to_diff)

    fromdate = None
    fromdate = request.GET.get('since', None)
    fromdate = request.session.get(sessionvar, None) if not fromdate else fromdate
    fromdate = unicode(datetime.now().isoformat()) if not fromdate else fromdate
    fromdate = _parse_iso_datetime(fromdate) if fromdate else None


    todate = datetime.now()

    current = obj.versions.for_date(todate)
    previous = obj.versions.for_date(fromdate)

    field_diff = current.diff_to_older(previous)

    dates = []
    tmpdate = obj.published
    tmpversion = None

    request.session[sessionvar] = datetime.now().isoformat()

    while tmpdate < datetime.now():
        tmpobj2 = None
        try:
            tmpobj2 = obj.versions.for_date(tmpdate)
        except Version.DoesNotExist:
            tmpdate += timedelta(days=1)
            continue
        tmpversion2 = tmpobj2._version
        changed = tmpversion != tmpversion2
        dates.append((tmpversion2.revision.date_created if tmpversion2 else tmpdate, changed,))
        tmpdate += timedelta(days=1)
        tmpversion = tmpversion2

    return render_to_response(template, {
        'current': current,
        'previous': previous,
        'field_diff': field_diff,
        'fromdate': fromdate,
        'todate': todate,
        'versiondates': dates,
        }, context_instance=RequestContext(request))

